<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QBERAEREAREQH//Z
</value>
  </data>
</root>